DOM = document object model
BOM = browser object model

reach the dom = document.
reach the bom = window.


what type of things are possible with the window object.

What can we do outside of the DOM?

-----------------------------------------------

Vi vill öppna en ny flik och i den nya fliken öppna en url

window.open('http://www.dn.se');

window.openNewWindow(); // Öppnar en ny webbläsare

window.close(); // Stänger den aktiva tabben/fliken


-----------------------------------------------
main.js

window.onload = function() {

  document.getElementById("navigateAway").addEventListener('click', gotoUrl);
  document.getElementById("closeCurrent").addEventListener('click', closeActive);

}

function gotoUrl() {
  window.open("http://www.dn.se");
}

function closeActive() {
  window.close();
}

----------------------------------------------------

window.setTimeout(fn, 4000);

window.document = document
window.setTimeout = setTimeout()

setTimeout(delayedExecution, 4000); <--- delayedExecution is a callback function

function delayedExecution() {
  console.log("Nu kördes funktionen");
}

---------------------------------------------------------
window.setInterval(fn, 4000): number;


let intervalId = setInterval(delayedExecution, 4000);
let i = 0;

function delayedExecution() {
  console.log("Nu kördes funktionen");

  i++;  // Räknar hur många gånger som funktionen har körts

  if( i === 10 ) {  // Om antalet gånger är 10...
    clearInterval(intervalId);  // Avbryt ett setInterval
  }
}

---------------------------------------------------------
window.navigator

window.navigator.userAgent

window.navigator.geolocation

navigator.geolocation // geoloaction är ett objekt som finns i alla moderna webbläsare

if (navigator.geolocation) {  // Kontrollera att geolocation-objektet finns
  ... (THIS IS WHERE THIS)
}
else {
  alert("Din webbläsare stödjer inte geolocation");
}

navigator.geolocation.

* getCurrentPosition()  // setTimeout
* watchPosition()          // setInterval
* clearWatch()              // Avbryt watchPosition



... = navigator.geolocation.getCurrentPosition(gotPosition, errorGettingPosition);


function gotPosition(position) {
  console.log(position);
}

function errorGettingPosition(error) {
  console.log(error);
}